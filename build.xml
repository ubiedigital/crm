<?xml version="1.0" encoding="UTF-8"?>

<project name="UbieDigital CRM" default="build">
    <!---
        VARIABLES SECTION
    -->

    <!---
        Default variables
    -->
    <property name="php.bin" value="php"/>
    <property name="composer.command" value="composer.phar install --prefer-dist --no-dev"/>

    <property name="environment" value="dev" override="true"/>
    <property name="release" value="1" override="true"/>

    <!---
        Here we process all variables, based on environment and properties file variables
    -->
    <target name="variables">
        <available file="build.${environment}.properties" property="build.properties.exists"/>
        <if>
            <equals arg1="${build.properties.exists}" arg2="true"/>
            <then>
                <property file="build.${environment}.properties" override="true"/>
            </then>
        </if>
        <if>
            <isset property="env.ENVIRONMENT"/>
            <then>
                <property name="environment" value="${env.ENVIRONMENT}" override="true"/>
            </then>
        </if>
        <if>
            <isset property="env.RELEASE"/>
            <then>
                <property name="release" value="${env.RELEASE}" override="true"/>
            </then>
        </if>

        <property name="build.archive" value="${release}.tar.gz" override="true"/>
        <property name="build.release_path" value="./build/${release}" override="true"/>
        <property name="build.archive_path" value="./build/${build.archive}" override="true"/>

        <echo msg="Variables has been set"/>
    </target>

    <!---
        BUILD SECTION
    -->

    <!---
        Main build executor
    -->
    <target name="build" depends="build:prepare">
        <phingcall target="build:parameters"/>
        <phingcall target="build:environment"/>

        <echo msg="Downloading composer..."/>
        <exec command="wget https://getcomposer.org/composer.phar -P ${build.release_path}" passthru="true"/>

        <echo msg="Creating archive..."/>
        <tar destfile="${build.archive_path}" compression="gzip">
            <fileset dir="${build.release_path}">
                <include name="*"/>
            </fileset>
        </tar>

        <echo msg="Removing no longer needed build files..."/>
        <exec command="rm -r ${build.release_path}" passthru="true"/>

        <echo msg="Build process is done."/>
    </target>

    <!---
        Prepares all files for build
    -->
    <target name="build:prepare" depends="variables">
        <echo msg="Making build directory"/>
        <mkdir dir="${build.release_path}"/>

        <echo msg="Copying files to build directory..."/>
        <copy todir="${build.release_path}">
            <fileset dir=".">
                <include name="**"/>
                <exclude name="config/parameters.yml"/>
                <exclude name="config/parameters_test.yml"/>
                <exclude name="var/attachment/*"/>
                <exclude name="var/attachment"/>
                <exclude name="var/cache/**"/>
                <exclude name="var/cache"/>
                <exclude name="var/logs/*"/>
                <exclude name="var/logs"/>
                <exclude name="var/import_export/*"/>
                <exclude name="var/import_export"/>
                <exclude name="public/bundles/**"/>
                <exclude name="public/bundles"/>
                <exclude name="public/images/**"/>
                <exclude name="public/images"/>
                <exclude name="public/media/**"/>
                <exclude name="public/media"/>
                <exclude name="public/uploads/**"/>
                <exclude name="public/uploads"/>
                <exclude name="build/**"/>
                <exclude name="build"/>
                <exclude name="node_modules/**"/>
                <exclude name="node_modules"/>
                <exclude name="vendor/**"/>
                <exclude name="vendor"/>
                <exclude name=".idea/**"/>
                <exclude name=".docker/**"/>
                <exclude name=".docker"/>
                <exclude name=".ssh/*"/>
                <exclude name=".ssh"/>
                <exclude name=".gitignore"/>
                <exclude name=".gitlab-ci.yml"/>
                <exclude name="docker-compose.yml"/>
                <exclude name=".gitkeep"/>
            </fileset>
        </copy>
    </target>

    <!---
        Builds parameters.yml file if build.parameters.properties exists otherwise composer will build it
    -->
    <target name="build:parameters">
        <available file="build.${environment}.parameters.properties" property="build.parameters.properties.exists"/>
        <if>
            <equals arg1="${build.parameters.properties.exists}" arg2="true"/>
            <then>
                <echo msg="Building parameters file..."/>
                <property file="build.${environment}.parameters.properties" override="true"/>
                <copy file="${build.release_path}/config/parameters.yml.dist"
                      tofile="${build.release_path}/config/parameters.yml" overwrite="true">
                    <filterchain>
                        <replacetokens begintoken="##" endtoken="##">
                            <token key="DATABASE_HOST" value="${build.parameters.database_host}"/>
                            <token key="DATABASE_PORT" value="${build.parameters.database_port}"/>
                            <token key="DATABASE_NAME" value="${build.parameters.database_name}"/>
                            <token key="DATABASE_USER" value="${build.parameters.database_user}"/>
                            <token key="DATABASE_PASSWORD" value="${build.parameters.database_password}"/>
                            <token key="MAILER_TRANSPORT" value="${build.parameters.mailer_transport}"/>
                            <token key="MAILER_HOST" value="${build.parameters.mailer_host}"/>
                            <token key="MAILER_PORT" value="${build.parameters.mailer_port}"/>
                            <token key="MAILER_ENCRYPTION" value="${build.parameters.mailer_encryption}"/>
                            <token key="MAILER_USER" value="${build.parameters.mailer_user}"/>
                            <token key="MAILER_PASSWORD" value="${build.parameters.mailer_password}"/>
                            <token key="WEB_BACKEND_PREFIX" value="${build.parameters.web_backend_prefix}"/>
                            <token key="LOCALE" value="${build.parameters.locale}"/>
                            <token key="SECRET" value="${build.parameters.secret}"/>
                            <token key="INSTALLED" value="${build.parameters.installed}"/>
                        </replacetokens>
                    </filterchain>
                </copy>
            </then>
        </if>
    </target>

    <!---
        Build environment specific files
    -->
    <target name="build:environment">
        <echo msg="Building environment..."/>

        <property name="build.htaccess_suffix" value="_dev"/>
        <if>
            <equals arg1="${environment}" arg2="prod"/>
            <then>
                <property name="build.htaccess_suffix" value=""/>
            </then>
        </if>
        <copy file="${build.release_path}/public/.htaccess.dist" tofile="${build.release_path}/public/.htaccess"
              overwrite="true">
            <filterchain>
                <replacetokens begintoken="##" endtoken="##">
                    <token key="ENVIRONMENT" value="${build.htaccess_suffix}"/>
                </replacetokens>
            </filterchain>
        </copy>
    </target>
</project>
